Código 1:
import numpy as np #librerias matematicas
from matplotlib import pyplot as plt #Librerias para gráficar
def f(x):
    #Ultimo numero es = 5+raiz de 5(ultimo # de mi cedula) +2
    #return x**3+2*(x)+7.64

    # Ultimo numero es = 5(ultimo # de mi cedula)-1/3
      return x**3+2*(x)+4.66

def secante(a, b, tol, max_iter):
    iter = 0
    c = (a + b) / 2
    i = 0
    while (abs(f(c)) > tol and iter < max_iter):
        c = b - (f(b) * (b - a) / (f(b) - f(a)))
        a = b
        b = c
        i = i + 1
        print("Iteracion: ", i, " raiz: ", c)

a=-1
b=3
iteraciones=200
xa = 1.5
secante(a, b, 1e-11, iteraciones)

# See PyCharm help at https://www.jetbrains.com/help/pycharm/
xi = np.linspace(a,b,iteraciones+1)
fi = f(xi)
c = (b-xa)/2
pendiente = (f(xa+c)-f(xa))/(xa+c-xa)
b0 = f(xa) - pendiente*xa
tangentei = pendiente*xi+b0

fxa = f(xa)
xb = xa + c
fxb = f(xb)

plt.plot(xi,fi, label='f(x)')
plt.plot(xi,tangentei, label='secante')
plt.plot(xa,f(xa),'go', label='xa')
plt.plot(xa+c,f(xa+c),'ro', label='xb')
plt.plot((-b0/pendiente),0,'yo', label='xc')

plt.plot([xa,xa],[0,fxa],'m')
plt.plot([xb,xb],[0,fxb],'m')

plt.axhline(0, color='k')
plt.title('Método de la Secante')
plt.legend()
plt.grid()
plt.show()

código 2:
import math
def puntofijo(fn,dfn,x,tol,max):
    for i in range(max):
        xnueva = x-fn(x)/dfn(x)
        if abs(xnueva-x) < tol: break
        x = xnueva
    return xnueva,i

y = lambda x: x**3-2*x-5
dy = lambda x: 3*x**x-2

x,n = puntofijo(y,dy,5,0.00001,10)
#print ("la raiz es %f y %d iteraciones " % (x,n))


def f(x):
    return x * x * x - 2*x - 5


# Re-writing f(x)=0 to x = g(x)
def g(x):
    return 1 / math.sqrt(1 + x)



def fixedPointIteration(x0, e, N):
    print('\n\nIteraciones y raices')
    step = 1
    flag = 1
    condition = True
    while condition:
        x1 = g(x0)
        print('Iteration-%d, x1 = %0.6f and f(x1) = %0.6f' % (step, x1, f(x1)))
        x0 = x1

        step = step + 1

        if step > N:
            flag = 0
            break

        condition = abs(f(x1)) > e

    if flag == 1:
        print('\nRequired root is: %0.8f' % x1)
    else:
        print('\n Convergente')
        print('\n intervalo:(5,10)')


# Input Section
#x0 = input('Enter Guess: ')
e = input('Tolerancia: ')
#N = input('Maximum Step: ')

# Converting x0 and e to float
#x0 = float(x0)
e = float(e)

# Converting N to integer
#N = int(N)

fixedPointIteration(5, e, 10)
